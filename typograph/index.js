const checkingText = document.querySelector(".text");
const btn = document.querySelector(".btn");
const copy = document.querySelector(".copy");
const deleteText = document.querySelector(".deleteText");

// –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–º—ñ–Ω–∏ —Ç–µ–∫—Å—Ç—É –ø–æ —à–∞–±–ª–æ–Ω—É
function replaceAll(text, search, replace) {
  return text.replaceAll(search, replace);
}

// –õ–∞–Ω—Ü—é–≥ –∑–∞–º—ñ–Ω –ª–∞–ø–æ–∫
function processText() {
  let text = " " + checkingText.value;

  const replacements = [
    { from: "‚Äû", to: " ¬´" },
    { from: "‚Äú", to: "¬ª" },
    { from: " ‚Äú", to: " ¬´" },
    { from: "‚Äù", to: "¬ª" },
    { from: '"', to: "¬ª" },
    { from: '("', to: '¬´' },
    { from: '\n¬ª', to: '\n¬´' },
    { from: ' ¬ª', to: ' ¬´' },
    { from: '(¬ª', to: '(¬´' },
  ];

  replacements.forEach(({ from, to }) => {
    text = replaceAll(text, from, to);
  });

  checkingText.value = text.trim();
  checkingText.classList.add("access");
  copy.classList.remove("hidden");
}

// –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –±–∏–Ω–¥–µ—Ä –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π –∫–ª–∞–≤—ñ—à
function bindShortcut(func, ...codes) {
  const pressed = new Set();
  document.addEventListener("keydown", (e) => {
    pressed.add(e.code);
    if (codes.every((code) => pressed.has(code))) {
      pressed.clear();
      func();
    }
  });
  document.addEventListener("keyup", (e) => pressed.delete(e.code));
}

// –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É
function copyText() {
  const text = checkingText.value;
  if (!text) return;

  navigator.clipboard.writeText(text);
  copy.setAttribute("value", "–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ");
  copy.setAttribute("disabled", "true");
  checkingText.classList.add("access-copy");

  setTimeout(() => {
    copy.setAttribute("value", "–ö–æ–ø—ñ—é–≤–∞—Ç–∏");
    copy.removeAttribute("disabled");
  }, 2000);
}

// –û—á–∏—â–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
function clearText() {
  checkingText.style.minHeight = "";
  checkingText.value = "";
  pasted.innerHTML = 0;
  checkingText.classList.remove("access", "access-copy");
  checkingText.setAttribute("placeholder", "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç");
  copy.classList.add("hidden");
}

// –ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç–µ–∫—Å—Ç—É
function activateButton() {
  btn.removeAttribute("disabled");
  checkingText.classList.remove("access", "access-copy");
}

// –ü–æ–¥—ñ—ó
checkingText.addEventListener("input", activateButton);
checkingText.addEventListener("change", activateButton);
btn.addEventListener("click", processText);
copy.addEventListener("click", copyText);
deleteText.addEventListener("click", clearText);

// –ì–∞—Ä—è—á—ñ –∫–ª–∞–≤—ñ—à—ñ
bindShortcut(processText, "ControlLeft", "KeyX");
bindShortcut(copyText, "ControlLeft", "KeyC");
bindShortcut(clearText, "ControlLeft", "KeyQ");

// –ó–º—ñ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤–∫–ª–∞–¥–∫–∏
document.onblur = () => (document.title = "¬´üò≥¬ª –ó–ê–ú–Ü–ù–ê");
document.onfocus = () =>
  (document.title =
    "–ó–∞–º—ñ–Ω–∞ –ª–∞–ø–æ–∫ –Ω–∞ —è–ª–∏–Ω–∫–∏ –æ–Ω–ª–∞–π–Ω || –ó–∞–º—ñ–Ω–∏—Ç–∏ –ª–∞–ø–∫–∏|| –∑–∞–º—ñ–Ω–∏—Ç–∏ –ª–∞–ø–∫–∏ –Ω–∞ —è–ª–∏–Ω–∫–∏ –æ–Ω–ª–∞–π–Ω");
